plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'org.liquibase.gradle' version '2.0.1'
    id 'java'
    id 'com.moowork.node' version '1.3.1'
}

apply plugin: 'io.spring.dependency-management'

group = 'by.rjeey'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '10'
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

node {
    download = true

    workDir = file("${project.projectDir}/src/main/frontend-private-collection-manager/nodejs")
    npmWorkDir = file("${project.projectDir}/scr/main/frontend-private-collection-manager/npm")
    nodeModulesDir = file("${project.projectDir}/src/main/frontend-private-collection-manager")
}

processResources {
    dependsOn 'copyFrontendToBuild'
}

task copyFrontendToBuild(type: Copy) {
    from "$projectDir/src/main/frontend-private-collection-manager/build/"
    into "$buildDir/resources/main/static"
}

task npmBuild(type:NpmTask){
	execOverrides{
		it.workingDir='src/main/frontend-private-collection-manager'
	}
	args=['run', 'build']
}

task npmShowVersion(type:NpmTask){
	execOverrides{
		it.ignoreExitValue = true
		it.workingDir = 'src/main/frontend-private-collection-manager'
	}
	args=['--version']
}

task npmInstall2(type:NpmTask){
	execOverrides{
		it.ignoreExitValue = true
		it.workingDir = 'src/main/frontend-private-collection-manager'
	}
	args=['install']
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    liquibaseRuntime 'org.liquibase:liquibase-core:3.8.0'
    runtimeOnly 'mysql:mysql-connector-java'
    liquibaseRuntime 'mysql:mysql-connector-java'
    implementation 'org.mapstruct:mapstruct:1.3.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}
